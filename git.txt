8.18：
ls -ah
git init 
git add file
git commit file -m ""
git status
git diff file 
git log 
git log --pretty=online
git reset --hard HEAD^
git reset --hard 01724
git reflog

工作区 ->暂存区 ->分支

20180822
rm file
git rm  file

git checkout -b new 

this is 以前的阅读：201801：

因为Git跟踪并管理的是修改，而非文件。

git diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本的区别

git checkout -- file可以丢弃工作区的修改
git checkout -- file命令中的--很重要，没有--，就变成了“切换到另一个分支”的命令，我们在后面的分支管理中会再次遇到git checkout命令。

git reset HEAD file可以把暂存区的修改撤销掉（unstage），重新放回工作区
git reset HEAD readme.txt

命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，
但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。
git rm test.txt
git commit -m "remove test.txt"
 
git checkout -- test.txt
git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。



https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00150154460073692d151e784de4d718c67ce836f72c7c4000


https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%85%B3%E4%BA%8E%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6

git checkout -- file可以丢弃工作区的修改
git checkout -- file命令中的--很重要，没有--，就变成了“切换到另一个分支”的命令，我们在后面的分支管理中会再次遇到git checkout命令。

git reset HEAD file可以把暂存区的修改撤销掉（unstage），重新放回工作区
git reset HEAD readme.txt

命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，
但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。
git rm test.txt
git commit -m "remove test.txt"
 
git checkout -- test.txt
git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。
